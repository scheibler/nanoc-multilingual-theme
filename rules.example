#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
    # redirect index page
    @items.create(
        "<%= render 'redirect' %>", { :kind => 'redirect' }, "/language_redirect")
    # create various blog sites in all supported languages
    # if you don't use the blog pattern at your site, you can delete the rest of the preprocess block
    for language in LANGUAGE_CODE_TO_NAME_MAPPING.keys do
        article_list = sorted_blog_article_list_for(language)
        # blog main page
        @items.create( "",
            { :kind => 'article_list', :title => 'Blog', :canonical_identifier => 'blog_home', :start_index => 0 },
            "/" + language + "/blog")
        # blog index pages for older articles
        article_index = @config[:number_of_articles_at_blog_index_page]
        site_index = 2
        while article_index < article_list.length
            @items.create( "",
                { :kind => 'article_list', :title => translate_string(language, 'blog_title_page_number') % site_index,
                    :canonical_identifier => "blog_home%d" % site_index, :start_index => article_index },
                "/" + language + "/blog/index-%.2d" % site_index)
            article_index += @config[:number_of_articles_at_blog_index_page]
            site_index += 1
        end
        # blog rss feed
        @items.create(
            "<%= atom_feed :title => @config[:blog_title], :author_name => @config[:site_author],
                :author_uri => @config[:base_url], :limit => @config[:number_of_rss_feed_entries],
                :articles => sorted_blog_article_list_for(language_code_of(item)) %>",
            { :kind => 'feed' }, "/" + language + "/blog/feed")
        # tags main page
        @items.create( "",
            { :kind => 'tag_list', :title => 'Tags', :canonical_identifier => 'tag_list', :start_index => 0 },
            "/" + language + "/blog/tags")
        all_tags(language, true).each do |tag|
            @items.create( "",
                { :kind => 'article_list_for_tag', :title => 'Tag %s' % tag[0], :tag => tag[0],
                    :count => tag[1], :canonical_identifier => 'articles_for_tag_%s' % tag[0].gsub(' ','_') },
                "/" + language + "/blog/tags/" + tag[0].gsub(' ','-'))
        end
    end
end

compile '*' do
    if item[:extension] == 'md'
        filter :include_text_from_file
        filter :create_toc
        filter :pandoc
        if item[:kind] == 'article'
            layout 'blog/article'
        else
            layout 'default'
        end
    elsif item[:kind] == 'article_list'
        filter :erb
        layout 'blog/article_list'
    elsif item[:kind] == 'article_list_for_tag'
        filter :erb
        layout 'blog/article_list_for_tag'
    elsif item[:kind] == 'tag_list'
        filter :erb
        layout 'blog/tag_list'
    elsif item[:kind] == 'feed'
        filter :erb
    elsif item[:kind] == 'redirect'
        filter :erb
    else
        # don't filter other stuff
    end
end

route '*' do
    if item.identifier.to_s.match(/\/blog\/[0-9]{4}/) != nil
        y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/
            .match(item.identifier.to_s).captures
        path = "/" + language_code_of(item) + "/blog/#{y}/#{m}/#{slug}"
        if item[:kind] == 'article'
            path + "/index.html"
        else
            path + "/" + item.raw_filename.split("/")[-1]
        end
    elsif item.identifier.to_s.match(/\/blog\/index-[0-9]{2}/) != nil
        item.identifier + '.html'
    elsif item.identifier.to_s.match(/\/blog\/tags/) != nil
        item.identifier + '.html'
    elsif item.identifier.to_s.match(/\/blog\/feed/) != nil
        item.identifier + '.xml'
    elsif item.identifier.to_s.match(/\/language_redirect/) != nil
        '/index.php'
    elsif item.binary?
        # Write item with identifier /foo/ to /foo.ext
        if item[:extension] == nil
            item.identifier.chop
        else
            item.identifier.chop + '.' + item[:extension]
        end
    else
        # Write item with identifier /foo to /foo/index.html
        item.identifier + '/index.html'
    end
end

layout '*', :erb
